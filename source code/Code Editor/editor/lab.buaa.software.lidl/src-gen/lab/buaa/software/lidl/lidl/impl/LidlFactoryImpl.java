/**
 * generated by Xtext 2.25.0
 */
package lab.buaa.software.lidl.lidl.impl;

import lab.buaa.software.lidl.lidl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class LidlFactoryImpl extends EFactoryImpl implements LidlFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static LidlFactory init()
  {
    try
    {
      LidlFactory theLidlFactory = (LidlFactory)EPackage.Registry.INSTANCE.getEFactory(LidlPackage.eNS_URI);
      if (theLidlFactory != null)
      {
        return theLidlFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new LidlFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LidlFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case LidlPackage.LIDL_PROGRAM: return createLidlProgram();
      case LidlPackage.LIDL_IMPORT: return createLidlImport();
      case LidlPackage.LIDL_DEFINITION: return createLidlDefinition();
      case LidlPackage.LIDL_DATA: return createLidlData();
      case LidlPackage.LIDL_DATA_TYPE: return createLidlDataType();
      case LidlPackage.TYPE_ELEMENT: return createTypeElement();
      case LidlPackage.LIDL_INTERFACE: return createLidlInterface();
      case LidlPackage.LIDL_INTERFACE_TYPE: return createLidlInterfaceType();
      case LidlPackage.INTERFACE_ELEMENT: return createInterfaceElement();
      case LidlPackage.LIDL_INTERACTION: return createLidlInteraction();
      case LidlPackage.LIDL_INTERACTION_ID: return createLidlInteractionID();
      case LidlPackage.ID_PART: return createIDPart();
      case LidlPackage.LIDL_EXPRESSON: return createLidlExpresson();
      case LidlPackage.LIDL_EXPRESSION: return createLidlExpression();
      case LidlPackage.CALL_PART: return createCallPart();
      case LidlPackage.LIDL_ARRAY_ITEM: return createLidlArrayItem();
      case LidlPackage.LIDL_SYMBOL: return createLidlSymbol();
      case LidlPackage.LIDL_COMPOSITION_ELEMENT: return createLidlCompositionElement();
      case LidlPackage.COMPOSITE_DATA_TYPE: return createCompositeDataType();
      case LidlPackage.REF_DATA_TYPE: return createRefDataType();
      case LidlPackage.COMPOSITE_DATA_TYPE_ELEMENT: return createCompositeDataTypeElement();
      case LidlPackage.REF_DATA_TYPE_ELEMENT: return createRefDataTypeElement();
      case LidlPackage.ATOM_INTERFACE_TYPE_ELEMENT: return createAtomInterfaceTypeElement();
      case LidlPackage.COMPOSITE_INTERFACE_TYPE_ELEMENT: return createCompositeInterfaceTypeElement();
      case LidlPackage.REF_INTERFACE_TYPE_ELEMENT: return createRefInterfaceTypeElement();
      case LidlPackage.ATOM_INTERFACE_TYPE: return createAtomInterfaceType();
      case LidlPackage.COMPOSITE_INTERFACE_TYPE: return createCompositeInterfaceType();
      case LidlPackage.REF_INTERFACE_TYPE: return createRefInterfaceType();
      case LidlPackage.LIDL_PARAMETER: return createLidlParameter();
      case LidlPackage.LIDL_TEXT: return createLidlText();
      case LidlPackage.LIDL_CALL_EXPRESSION: return createLidlCallExpression();
      case LidlPackage.TEXT_CALL_PART: return createTextCallPart();
      case LidlPackage.PARAM_CALL_PART: return createParamCallPart();
      case LidlPackage.LIDL_STRING_CONSTANT: return createLidlStringConstant();
      case LidlPackage.LIDL_NUMBER_CONSTANT: return createLidlNumberConstant();
      case LidlPackage.LIDL_BOOL_CONSTANT: return createLidlBoolConstant();
      case LidlPackage.LIDL_AVTIVATION_CONSTANT: return createLidlAvtivationConstant();
      case LidlPackage.LIDL_COMPOSITION: return createLidlComposition();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object createFromString(EDataType eDataType, String initialValue)
  {
    switch (eDataType.getClassifierID())
    {
      case LidlPackage.DATA_DIRECTION:
        return createDataDirectionFromString(eDataType, initialValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String convertToString(EDataType eDataType, Object instanceValue)
  {
    switch (eDataType.getClassifierID())
    {
      case LidlPackage.DATA_DIRECTION:
        return convertDataDirectionToString(eDataType, instanceValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlProgram createLidlProgram()
  {
    LidlProgramImpl lidlProgram = new LidlProgramImpl();
    return lidlProgram;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlImport createLidlImport()
  {
    LidlImportImpl lidlImport = new LidlImportImpl();
    return lidlImport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlDefinition createLidlDefinition()
  {
    LidlDefinitionImpl lidlDefinition = new LidlDefinitionImpl();
    return lidlDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlData createLidlData()
  {
    LidlDataImpl lidlData = new LidlDataImpl();
    return lidlData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlDataType createLidlDataType()
  {
    LidlDataTypeImpl lidlDataType = new LidlDataTypeImpl();
    return lidlDataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeElement createTypeElement()
  {
    TypeElementImpl typeElement = new TypeElementImpl();
    return typeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlInterface createLidlInterface()
  {
    LidlInterfaceImpl lidlInterface = new LidlInterfaceImpl();
    return lidlInterface;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlInterfaceType createLidlInterfaceType()
  {
    LidlInterfaceTypeImpl lidlInterfaceType = new LidlInterfaceTypeImpl();
    return lidlInterfaceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public InterfaceElement createInterfaceElement()
  {
    InterfaceElementImpl interfaceElement = new InterfaceElementImpl();
    return interfaceElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlInteraction createLidlInteraction()
  {
    LidlInteractionImpl lidlInteraction = new LidlInteractionImpl();
    return lidlInteraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlInteractionID createLidlInteractionID()
  {
    LidlInteractionIDImpl lidlInteractionID = new LidlInteractionIDImpl();
    return lidlInteractionID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IDPart createIDPart()
  {
    IDPartImpl idPart = new IDPartImpl();
    return idPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlExpresson createLidlExpresson()
  {
    LidlExpressonImpl lidlExpresson = new LidlExpressonImpl();
    return lidlExpresson;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlExpression createLidlExpression()
  {
    LidlExpressionImpl lidlExpression = new LidlExpressionImpl();
    return lidlExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CallPart createCallPart()
  {
    CallPartImpl callPart = new CallPartImpl();
    return callPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlArrayItem createLidlArrayItem()
  {
    LidlArrayItemImpl lidlArrayItem = new LidlArrayItemImpl();
    return lidlArrayItem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlSymbol createLidlSymbol()
  {
    LidlSymbolImpl lidlSymbol = new LidlSymbolImpl();
    return lidlSymbol;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlCompositionElement createLidlCompositionElement()
  {
    LidlCompositionElementImpl lidlCompositionElement = new LidlCompositionElementImpl();
    return lidlCompositionElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CompositeDataType createCompositeDataType()
  {
    CompositeDataTypeImpl compositeDataType = new CompositeDataTypeImpl();
    return compositeDataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RefDataType createRefDataType()
  {
    RefDataTypeImpl refDataType = new RefDataTypeImpl();
    return refDataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CompositeDataTypeElement createCompositeDataTypeElement()
  {
    CompositeDataTypeElementImpl compositeDataTypeElement = new CompositeDataTypeElementImpl();
    return compositeDataTypeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RefDataTypeElement createRefDataTypeElement()
  {
    RefDataTypeElementImpl refDataTypeElement = new RefDataTypeElementImpl();
    return refDataTypeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomInterfaceTypeElement createAtomInterfaceTypeElement()
  {
    AtomInterfaceTypeElementImpl atomInterfaceTypeElement = new AtomInterfaceTypeElementImpl();
    return atomInterfaceTypeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CompositeInterfaceTypeElement createCompositeInterfaceTypeElement()
  {
    CompositeInterfaceTypeElementImpl compositeInterfaceTypeElement = new CompositeInterfaceTypeElementImpl();
    return compositeInterfaceTypeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RefInterfaceTypeElement createRefInterfaceTypeElement()
  {
    RefInterfaceTypeElementImpl refInterfaceTypeElement = new RefInterfaceTypeElementImpl();
    return refInterfaceTypeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AtomInterfaceType createAtomInterfaceType()
  {
    AtomInterfaceTypeImpl atomInterfaceType = new AtomInterfaceTypeImpl();
    return atomInterfaceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public CompositeInterfaceType createCompositeInterfaceType()
  {
    CompositeInterfaceTypeImpl compositeInterfaceType = new CompositeInterfaceTypeImpl();
    return compositeInterfaceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RefInterfaceType createRefInterfaceType()
  {
    RefInterfaceTypeImpl refInterfaceType = new RefInterfaceTypeImpl();
    return refInterfaceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlParameter createLidlParameter()
  {
    LidlParameterImpl lidlParameter = new LidlParameterImpl();
    return lidlParameter;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlText createLidlText()
  {
    LidlTextImpl lidlText = new LidlTextImpl();
    return lidlText;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlCallExpression createLidlCallExpression()
  {
    LidlCallExpressionImpl lidlCallExpression = new LidlCallExpressionImpl();
    return lidlCallExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TextCallPart createTextCallPart()
  {
    TextCallPartImpl textCallPart = new TextCallPartImpl();
    return textCallPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ParamCallPart createParamCallPart()
  {
    ParamCallPartImpl paramCallPart = new ParamCallPartImpl();
    return paramCallPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlStringConstant createLidlStringConstant()
  {
    LidlStringConstantImpl lidlStringConstant = new LidlStringConstantImpl();
    return lidlStringConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlNumberConstant createLidlNumberConstant()
  {
    LidlNumberConstantImpl lidlNumberConstant = new LidlNumberConstantImpl();
    return lidlNumberConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlBoolConstant createLidlBoolConstant()
  {
    LidlBoolConstantImpl lidlBoolConstant = new LidlBoolConstantImpl();
    return lidlBoolConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlAvtivationConstant createLidlAvtivationConstant()
  {
    LidlAvtivationConstantImpl lidlAvtivationConstant = new LidlAvtivationConstantImpl();
    return lidlAvtivationConstant;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlComposition createLidlComposition()
  {
    LidlCompositionImpl lidlComposition = new LidlCompositionImpl();
    return lidlComposition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataDirection createDataDirectionFromString(EDataType eDataType, String initialValue)
  {
    DataDirection result = DataDirection.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertDataDirectionToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LidlPackage getLidlPackage()
  {
    return (LidlPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static LidlPackage getPackage()
  {
    return LidlPackage.eINSTANCE;
  }

} //LidlFactoryImpl
