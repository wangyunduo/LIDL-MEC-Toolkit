/*
 * generated by Xtext 2.25.0
 */
grammar InternalLidl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package lab.buaa.software.lidl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package lab.buaa.software.lidl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import lab.buaa.software.lidl.services.LidlGrammarAccess;

}

@parser::members {

 	private LidlGrammarAccess grammarAccess;

    public InternalLidlParser(TokenStream input, LidlGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "LidlProgram";
   	}

   	@Override
   	protected LidlGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleLidlProgram
entryRuleLidlProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlProgramRule()); }
	iv_ruleLidlProgram=ruleLidlProgram
	{ $current=$iv_ruleLidlProgram.current; }
	EOF;

// Rule LidlProgram
ruleLidlProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_pack_0_0='package'
					{
						newLeafNode(lv_pack_0_0, grammarAccess.getLidlProgramAccess().getPackPackageKeyword_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlProgramRule());
						}
						setWithLastConsumed($current, "pack", lv_pack_0_0 != null, "package");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlProgramAccess().getNameQualifiedNameParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlProgramRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"lab.buaa.software.lidl.Lidl.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getLidlProgramAccess().getSemicolonKeyword_0_2());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlProgramAccess().getImportsLidlImportParserRuleCall_1_0());
				}
				lv_imports_3_0=ruleLidlImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlProgramRule());
					}
					add(
						$current,
						"imports",
						lv_imports_3_0,
						"lab.buaa.software.lidl.Lidl.LidlImport");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlProgramAccess().getDefinitionsLidlDefinitionParserRuleCall_2_0());
				}
				lv_definitions_4_0=ruleLidlDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlProgramRule());
					}
					add(
						$current,
						"definitions",
						lv_definitions_4_0,
						"lab.buaa.software.lidl.Lidl.LidlDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleLidlImport
entryRuleLidlImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlImportRule()); }
	iv_ruleLidlImport=ruleLidlImport
	{ $current=$iv_ruleLidlImport.current; }
	EOF;

// Rule LidlImport
ruleLidlImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='import'
		{
			newLeafNode(otherlv_0, grammarAccess.getLidlImportAccess().getImportKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_1_0());
				}
				lv_importedNamespace_1_0=ruleQualifiedNameWithWildcard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlImportRule());
					}
					set(
						$current,
						"importedNamespace",
						lv_importedNamespace_1_0,
						"lab.buaa.software.lidl.Lidl.QualifiedNameWithWildcard");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getLidlImportAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameWithWildcardRule()); }
	iv_ruleQualifiedNameWithWildcard=ruleQualifiedNameWithWildcard
	{ $current=$iv_ruleQualifiedNameWithWildcard.current.getText(); }
	EOF;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0());
		}
		this_QualifiedName_0=ruleQualifiedName
		{
			$current.merge(this_QualifiedName_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		(
			kw='.*'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleLidlDefinition
entryRuleLidlDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlDefinitionRule()); }
	iv_ruleLidlDefinition=ruleLidlDefinition
	{ $current=$iv_ruleLidlDefinition.current; }
	EOF;

// Rule LidlDefinition
ruleLidlDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLidlDefinitionAccess().getLidlDataParserRuleCall_0());
		}
		this_LidlData_0=ruleLidlData
		{
			$current = $this_LidlData_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLidlDefinitionAccess().getLidlInterfaceParserRuleCall_1());
		}
		this_LidlInterface_1=ruleLidlInterface
		{
			$current = $this_LidlInterface_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLidlDefinitionAccess().getLidlInteractionParserRuleCall_2());
		}
		this_LidlInteraction_2=ruleLidlInteraction
		{
			$current = $this_LidlInteraction_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLidlData
entryRuleLidlData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlDataRule()); }
	iv_ruleLidlData=ruleLidlData
	{ $current=$iv_ruleLidlData.current; }
	EOF;

// Rule LidlData
ruleLidlData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='data'
		{
			newLeafNode(otherlv_0, grammarAccess.getLidlDataAccess().getDataKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLidlDataAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLidlDataRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_nested_2_0='with'
					{
						newLeafNode(lv_nested_2_0, grammarAccess.getLidlDataAccess().getNestedWithKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlDataRule());
						}
						setWithLastConsumed($current, "nested", lv_nested_2_0 != null, "with");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlDataAccess().getNestedDefLidlDataParserRuleCall_2_1_0());
					}
					lv_nestedDef_3_0=ruleLidlData
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlDataRule());
						}
						add(
							$current,
							"nestedDef",
							lv_nestedDef_3_0,
							"lab.buaa.software.lidl.Lidl.LidlData");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getLidlDataAccess().getIsKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlDataAccess().getDefinitionLidlDataTypeParserRuleCall_4_0_0());
					}
					lv_definition_5_0=ruleLidlDataType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlDataRule());
						}
						set(
							$current,
							"definition",
							lv_definition_5_0,
							"lab.buaa.software.lidl.Lidl.LidlDataType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_defined_6_0='Undefined'
					{
						newLeafNode(lv_defined_6_0, grammarAccess.getLidlDataAccess().getDefinedUndefinedKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlDataRule());
						}
						setWithLastConsumed($current, "defined", lv_defined_6_0 != null, "Undefined");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLidlDataType
entryRuleLidlDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlDataTypeRule()); }
	iv_ruleLidlDataType=ruleLidlDataType
	{ $current=$iv_ruleLidlDataType.current; }
	EOF;

// Rule LidlDataType
ruleLidlDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLidlDataTypeAccess().getCompositeDataTypeParserRuleCall_0());
		}
		this_CompositeDataType_0=ruleCompositeDataType
		{
			$current = $this_CompositeDataType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLidlDataTypeAccess().getRefDataTypeParserRuleCall_1());
		}
		this_RefDataType_1=ruleRefDataType
		{
			$current = $this_RefDataType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCompositeDataType
entryRuleCompositeDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeDataTypeRule()); }
	iv_ruleCompositeDataType=ruleCompositeDataType
	{ $current=$iv_ruleCompositeDataType.current; }
	EOF;

// Rule CompositeDataType
ruleCompositeDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeDataTypeAccess().getCompositeDataTypeAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositeDataTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeDataTypeAccess().getItemsCompositeDataTypeElementParserRuleCall_2_0());
				}
				lv_items_2_0=ruleCompositeDataTypeElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeDataTypeRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"lab.buaa.software.lidl.Lidl.CompositeDataTypeElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getCompositeDataTypeAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeDataTypeAccess().getItemsCompositeDataTypeElementParserRuleCall_3_1_0());
					}
					lv_items_4_0=ruleCompositeDataTypeElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeDataTypeRule());
						}
						add(
							$current,
							"items",
							lv_items_4_0,
							"lab.buaa.software.lidl.Lidl.CompositeDataTypeElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompositeDataTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRefDataType
entryRuleRefDataType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefDataTypeRule()); }
	iv_ruleRefDataType=ruleRefDataType
	{ $current=$iv_ruleRefDataType.current; }
	EOF;

// Rule RefDataType
ruleRefDataType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRefDataTypeAccess().getRefDataTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRefDataTypeAccess().getItemsRefDataTypeElementParserRuleCall_1_0());
				}
				lv_items_1_0=ruleRefDataTypeElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefDataTypeRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"lab.buaa.software.lidl.Lidl.RefDataTypeElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompositeDataTypeElement
entryRuleCompositeDataTypeElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeDataTypeElementRule()); }
	iv_ruleCompositeDataTypeElement=ruleCompositeDataTypeElement
	{ $current=$iv_ruleCompositeDataTypeElement.current; }
	EOF;

// Rule CompositeDataTypeElement
ruleCompositeDataTypeElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeDataTypeElementAccess().getCompositeDataTypeElementAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompositeDataTypeElementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeDataTypeElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompositeDataTypeElementAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompositeDataTypeElementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCompositeDataTypeElementAccess().getTypeLidlDataCrossReference_3_0_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						lv_isArray_4_0='['
						{
							newLeafNode(lv_isArray_4_0, grammarAccess.getCompositeDataTypeElementAccess().getIsArrayLeftSquareBracketKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompositeDataTypeElementRule());
							}
							setWithLastConsumed($current, "isArray", lv_isArray_4_0 != null, "[");
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompositeDataTypeElementRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCompositeDataTypeElementAccess().getTypeLidlDataCrossReference_3_1_1_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6=']'
				{
					newLeafNode(otherlv_6, grammarAccess.getCompositeDataTypeElementAccess().getRightSquareBracketKeyword_3_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleRefDataTypeElement
entryRuleRefDataTypeElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefDataTypeElementRule()); }
	iv_ruleRefDataTypeElement=ruleRefDataTypeElement
	{ $current=$iv_ruleRefDataTypeElement.current; }
	EOF;

// Rule RefDataTypeElement
ruleRefDataTypeElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRefDataTypeElementAccess().getRefDataTypeElementAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefDataTypeElementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRefDataTypeElementAccess().getTypeLidlDataCrossReference_0_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_isArray_2_0='['
					{
						newLeafNode(lv_isArray_2_0, grammarAccess.getRefDataTypeElementAccess().getIsArrayLeftSquareBracketKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefDataTypeElementRule());
						}
						setWithLastConsumed($current, "isArray", lv_isArray_2_0 != null, "[");
					}
				)
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRefDataTypeElementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRefDataTypeElementAccess().getTypeLidlDataCrossReference_1_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=']'
			{
				newLeafNode(otherlv_4, grammarAccess.getRefDataTypeElementAccess().getRightSquareBracketKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRuleLidlInterface
entryRuleLidlInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlInterfaceRule()); }
	iv_ruleLidlInterface=ruleLidlInterface
	{ $current=$iv_ruleLidlInterface.current; }
	EOF;

// Rule LidlInterface
ruleLidlInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='interface'
		{
			newLeafNode(otherlv_0, grammarAccess.getLidlInterfaceAccess().getInterfaceKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLidlInterfaceAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLidlInterfaceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_nested_2_0='with'
					{
						newLeafNode(lv_nested_2_0, grammarAccess.getLidlInterfaceAccess().getNestedWithKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlInterfaceRule());
						}
						setWithLastConsumed($current, "nested", lv_nested_2_0 != null, "with");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlInterfaceAccess().getNestedDefLidlInterfaceParserRuleCall_2_1_0());
					}
					lv_nestedDef_3_0=ruleLidlInterface
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlInterfaceRule());
						}
						add(
							$current,
							"nestedDef",
							lv_nestedDef_3_0,
							"lab.buaa.software.lidl.Lidl.LidlInterface");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getLidlInterfaceAccess().getIsKeyword_3());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlInterfaceAccess().getDefinitionLidlInterfaceTypeParserRuleCall_4_0_0());
					}
					lv_definition_5_0=ruleLidlInterfaceType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlInterfaceRule());
						}
						set(
							$current,
							"definition",
							lv_definition_5_0,
							"lab.buaa.software.lidl.Lidl.LidlInterfaceType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_defined_6_0='Undefined'
					{
						newLeafNode(lv_defined_6_0, grammarAccess.getLidlInterfaceAccess().getDefinedUndefinedKeyword_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlInterfaceRule());
						}
						setWithLastConsumed($current, "defined", lv_defined_6_0 != null, "Undefined");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLidlInterfaceType
entryRuleLidlInterfaceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlInterfaceTypeRule()); }
	iv_ruleLidlInterfaceType=ruleLidlInterfaceType
	{ $current=$iv_ruleLidlInterfaceType.current; }
	EOF;

// Rule LidlInterfaceType
ruleLidlInterfaceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLidlInterfaceTypeAccess().getAtomInterfaceTypeParserRuleCall_0());
		}
		this_AtomInterfaceType_0=ruleAtomInterfaceType
		{
			$current = $this_AtomInterfaceType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLidlInterfaceTypeAccess().getCompositeInterfaceTypeParserRuleCall_1());
		}
		this_CompositeInterfaceType_1=ruleCompositeInterfaceType
		{
			$current = $this_CompositeInterfaceType_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getLidlInterfaceTypeAccess().getRefInterfaceTypeParserRuleCall_2_0());
			}
			this_RefInterfaceType_2=ruleRefInterfaceType
			{
				$current = $this_RefInterfaceType_2.current;
				afterParserOrEnumRuleCall();
			}
			(
				(
					lv_conjugate_3_0='\''
					{
						newLeafNode(lv_conjugate_3_0, grammarAccess.getLidlInterfaceTypeAccess().getConjugateApostropheKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlInterfaceTypeRule());
						}
						setWithLastConsumed($current, "conjugate", lv_conjugate_3_0 != null, "\'");
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleAtomInterfaceTypeElement
entryRuleAtomInterfaceTypeElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomInterfaceTypeElementRule()); }
	iv_ruleAtomInterfaceTypeElement=ruleAtomInterfaceTypeElement
	{ $current=$iv_ruleAtomInterfaceTypeElement.current; }
	EOF;

// Rule AtomInterfaceTypeElement
ruleAtomInterfaceTypeElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAtomInterfaceTypeElementAccess().getAtomInterfaceTypeElementAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAtomInterfaceTypeElementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAtomInterfaceTypeElementAccess().getTypeLidlDataCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomInterfaceTypeElementAccess().getDirectionDataDirectionEnumRuleCall_2_0());
				}
				lv_direction_2_0=ruleDataDirection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomInterfaceTypeElementRule());
					}
					set(
						$current,
						"direction",
						lv_direction_2_0,
						"lab.buaa.software.lidl.Lidl.DataDirection");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompositeInterfaceTypeElement
entryRuleCompositeInterfaceTypeElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeInterfaceTypeElementRule()); }
	iv_ruleCompositeInterfaceTypeElement=ruleCompositeInterfaceTypeElement
	{ $current=$iv_ruleCompositeInterfaceTypeElement.current; }
	EOF;

// Rule CompositeInterfaceTypeElement
ruleCompositeInterfaceTypeElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeInterfaceTypeElementAccess().getCompositeInterfaceTypeElementAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCompositeInterfaceTypeElementAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCompositeInterfaceTypeElementRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCompositeInterfaceTypeElementAccess().getColonKeyword_2());
		}
		(
			(
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompositeInterfaceTypeElementRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getCompositeInterfaceTypeElementAccess().getTypeLidlDataCrossReference_3_0_0_0());
						}
						ruleQualifiedName
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getCompositeInterfaceTypeElementAccess().getDirectionDataDirectionEnumRuleCall_3_0_1_0());
						}
						lv_direction_4_0=ruleDataDirection
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCompositeInterfaceTypeElementRule());
							}
							set(
								$current,
								"direction",
								lv_direction_4_0,
								"lab.buaa.software.lidl.Lidl.DataDirection");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCompositeInterfaceTypeElementRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getCompositeInterfaceTypeElementAccess().getTypeLidlInterfaceCrossReference_3_1_0());
					}
					ruleQualifiedName
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRefInterfaceTypeElement
entryRuleRefInterfaceTypeElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefInterfaceTypeElementRule()); }
	iv_ruleRefInterfaceTypeElement=ruleRefInterfaceTypeElement
	{ $current=$iv_ruleRefInterfaceTypeElement.current; }
	EOF;

// Rule RefInterfaceTypeElement
ruleRefInterfaceTypeElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRefInterfaceTypeElementAccess().getRefInterfaceTypeElementAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRefInterfaceTypeElementRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getRefInterfaceTypeElementAccess().getTypeLidlInterfaceCrossReference_1_0());
				}
				ruleQualifiedName
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtomInterfaceType
entryRuleAtomInterfaceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomInterfaceTypeRule()); }
	iv_ruleAtomInterfaceType=ruleAtomInterfaceType
	{ $current=$iv_ruleAtomInterfaceType.current; }
	EOF;

// Rule AtomInterfaceType
ruleAtomInterfaceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAtomInterfaceTypeAccess().getAtomInterfaceTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomInterfaceTypeAccess().getItemsAtomInterfaceTypeElementParserRuleCall_1_0());
				}
				lv_items_1_0=ruleAtomInterfaceTypeElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomInterfaceTypeRule());
					}
					set(
						$current,
						"items",
						lv_items_1_0,
						"lab.buaa.software.lidl.Lidl.AtomInterfaceTypeElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompositeInterfaceType
entryRuleCompositeInterfaceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompositeInterfaceTypeRule()); }
	iv_ruleCompositeInterfaceType=ruleCompositeInterfaceType
	{ $current=$iv_ruleCompositeInterfaceType.current; }
	EOF;

// Rule CompositeInterfaceType
ruleCompositeInterfaceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCompositeInterfaceTypeAccess().getCompositeInterfaceTypeAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCompositeInterfaceTypeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCompositeInterfaceTypeAccess().getItemsCompositeInterfaceTypeElementParserRuleCall_2_0());
				}
				lv_items_2_0=ruleCompositeInterfaceTypeElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompositeInterfaceTypeRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"lab.buaa.software.lidl.Lidl.CompositeInterfaceTypeElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getCompositeInterfaceTypeAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCompositeInterfaceTypeAccess().getItemsCompositeInterfaceTypeElementParserRuleCall_3_1_0());
					}
					lv_items_4_0=ruleCompositeInterfaceTypeElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompositeInterfaceTypeRule());
						}
						add(
							$current,
							"items",
							lv_items_4_0,
							"lab.buaa.software.lidl.Lidl.CompositeInterfaceTypeElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCompositeInterfaceTypeAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRefInterfaceType
entryRuleRefInterfaceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRefInterfaceTypeRule()); }
	iv_ruleRefInterfaceType=ruleRefInterfaceType
	{ $current=$iv_ruleRefInterfaceType.current; }
	EOF;

// Rule RefInterfaceType
ruleRefInterfaceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRefInterfaceTypeAccess().getRefInterfaceTypeAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRefInterfaceTypeAccess().getItemsRefInterfaceTypeElementParserRuleCall_1_0());
				}
				lv_items_1_0=ruleRefInterfaceTypeElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRefInterfaceTypeRule());
					}
					set(
						$current,
						"items",
						lv_items_1_0,
						"lab.buaa.software.lidl.Lidl.RefInterfaceTypeElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLidlInteraction
entryRuleLidlInteraction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlInteractionRule()); }
	iv_ruleLidlInteraction=ruleLidlInteraction
	{ $current=$iv_ruleLidlInteraction.current; }
	EOF;

// Rule LidlInteraction
ruleLidlInteraction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='interaction'
		{
			newLeafNode(otherlv_0, grammarAccess.getLidlInteractionAccess().getInteractionKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlInteractionAccess().getIdLidlInteractionIDParserRuleCall_1_0());
				}
				lv_id_1_0=ruleLidlInteractionID
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlInteractionRule());
					}
					set(
						$current,
						"id",
						lv_id_1_0,
						"lab.buaa.software.lidl.Lidl.LidlInteractionID");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getLidlInteractionAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlInteractionAccess().getInterfaceLidlInterfaceTypeParserRuleCall_3_0());
				}
				lv_interface_3_0=ruleLidlInterfaceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlInteractionRule());
					}
					set(
						$current,
						"interface",
						lv_interface_3_0,
						"lab.buaa.software.lidl.Lidl.LidlInterfaceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_nested_4_0='with'
					{
						newLeafNode(lv_nested_4_0, grammarAccess.getLidlInteractionAccess().getNestedWithKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlInteractionRule());
						}
						setWithLastConsumed($current, "nested", lv_nested_4_0 != null, "with");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlInteractionAccess().getNestedDefLidlInteractionParserRuleCall_4_1_0());
					}
					lv_nestedDef_5_0=ruleLidlInteraction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlInteractionRule());
						}
						add(
							$current,
							"nestedDef",
							lv_nestedDef_5_0,
							"lab.buaa.software.lidl.Lidl.LidlInteraction");
						afterParserOrEnumRuleCall();
					}
				)
			)+
		)?
		otherlv_6='is'
		{
			newLeafNode(otherlv_6, grammarAccess.getLidlInteractionAccess().getIsKeyword_5());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getLidlInteractionAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlInteractionAccess().getDefinitionLidlExpressionParserRuleCall_7_0());
				}
				lv_definition_8_0=ruleLidlExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlInteractionRule());
					}
					set(
						$current,
						"definition",
						lv_definition_8_0,
						"lab.buaa.software.lidl.Lidl.LidlExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getLidlInteractionAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleLidlInteractionID
entryRuleLidlInteractionID returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlInteractionIDRule()); }
	iv_ruleLidlInteractionID=ruleLidlInteractionID
	{ $current=$iv_ruleLidlInteractionID.current; }
	EOF;

// Rule LidlInteractionID
ruleLidlInteractionID returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getLidlInteractionIDAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlInteractionIDAccess().getItemsIDPartParserRuleCall_1_0());
				}
				lv_items_1_0=ruleIDPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlInteractionIDRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"lab.buaa.software.lidl.Lidl.IDPart");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLidlInteractionIDAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleIDPart
entryRuleIDPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIDPartRule()); }
	iv_ruleIDPart=ruleIDPart
	{ $current=$iv_ruleIDPart.current; }
	EOF;

// Rule IDPart
ruleIDPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getIDPartAccess().getLidlTextParserRuleCall_0());
		}
		this_LidlText_0=ruleLidlText
		{
			$current = $this_LidlText_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getIDPartAccess().getLidlParameterParserRuleCall_1());
		}
		this_LidlParameter_1=ruleLidlParameter
		{
			$current = $this_LidlParameter_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLidlParameter
entryRuleLidlParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlParameterRule()); }
	iv_ruleLidlParameter=ruleLidlParameter
	{ $current=$iv_ruleLidlParameter.current; }
	EOF;

// Rule LidlParameter
ruleLidlParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLidlParameterAccess().getLidlParameterAction_0(),
					$current);
			}
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLidlParameterAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLidlParameterAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLidlParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getLidlParameterAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlParameterAccess().getInterfaceLidlInterfaceTypeParserRuleCall_4_0());
				}
				lv_interface_4_0=ruleLidlInterfaceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlParameterRule());
					}
					set(
						$current,
						"interface",
						lv_interface_4_0,
						"lab.buaa.software.lidl.Lidl.LidlInterfaceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLidlParameterAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleLidlText
entryRuleLidlText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlTextRule()); }
	iv_ruleLidlText=ruleLidlText
	{ $current=$iv_ruleLidlText.current; }
	EOF;

// Rule LidlText
ruleLidlText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLidlTextAccess().getLidlTextAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_text_1_1=RULE_ID
					{
						newLeafNode(lv_text_1_1, grammarAccess.getLidlTextAccess().getTextIDTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlTextRule());
						}
						setWithLastConsumed(
							$current,
							"text",
							lv_text_1_1,
							"org.eclipse.xtext.common.Terminals.ID");
					}
					    |
					lv_text_1_2=RULE_LIDLIDSYMBOL
					{
						newLeafNode(lv_text_1_2, grammarAccess.getLidlTextAccess().getTextLIDLIDSYMBOLTerminalRuleCall_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlTextRule());
						}
						setWithLastConsumed(
							$current,
							"text",
							lv_text_1_2,
							"lab.buaa.software.lidl.Lidl.LIDLIDSYMBOL");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLidlExpression
entryRuleLidlExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlExpressionRule()); }
	iv_ruleLidlExpression=ruleLidlExpression
	{ $current=$iv_ruleLidlExpression.current; }
	EOF;

// Rule LidlExpression
ruleLidlExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLidlExpressionAccess().getLidlCallExpressionParserRuleCall_0());
		}
		this_LidlCallExpression_0=ruleLidlCallExpression
		{
			$current = $this_LidlCallExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLidlExpressionAccess().getLidlTerminalExpressionParserRuleCall_1());
		}
		this_LidlTerminalExpression_1=ruleLidlTerminalExpression
		{
			$current = $this_LidlTerminalExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLidlExpressionAccess().getLidlArrayParserRuleCall_2());
		}
		this_LidlArray_2=ruleLidlArray
		{
			$current = $this_LidlArray_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLidlCallExpression
entryRuleLidlCallExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlCallExpressionRule()); }
	iv_ruleLidlCallExpression=ruleLidlCallExpression
	{ $current=$iv_ruleLidlCallExpression.current; }
	EOF;

// Rule LidlCallExpression
ruleLidlCallExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLidlCallExpressionAccess().getLidlCallExpressionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlCallExpressionAccess().getItemsCallPartParserRuleCall_1_0());
				}
				lv_items_1_0=ruleCallPart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlCallExpressionRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"lab.buaa.software.lidl.Lidl.CallPart");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleCallPart
entryRuleCallPart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCallPartRule()); }
	iv_ruleCallPart=ruleCallPart
	{ $current=$iv_ruleCallPart.current; }
	EOF;

// Rule CallPart
ruleCallPart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCallPartAccess().getTextCallPartAction_0_0(),
						$current);
				}
			)
			(
				(
					(
						lv_text_1_1=RULE_ID
						{
							newLeafNode(lv_text_1_1, grammarAccess.getCallPartAccess().getTextIDTerminalRuleCall_0_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCallPartRule());
							}
							setWithLastConsumed(
								$current,
								"text",
								lv_text_1_1,
								"org.eclipse.xtext.common.Terminals.ID");
						}
						    |
						lv_text_1_2=RULE_LIDLIDSYMBOL
						{
							newLeafNode(lv_text_1_2, grammarAccess.getCallPartAccess().getTextLIDLIDSYMBOLTerminalRuleCall_0_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCallPartRule());
							}
							setWithLastConsumed(
								$current,
								"text",
								lv_text_1_2,
								"lab.buaa.software.lidl.Lidl.LIDLIDSYMBOL");
						}
						    |
						lv_text_1_3=','
						{
							newLeafNode(lv_text_1_3, grammarAccess.getCallPartAccess().getTextCommaKeyword_0_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCallPartRule());
							}
							setWithLastConsumed($current, "text", lv_text_1_3, null);
						}
						    |
						lv_text_1_4='.'
						{
							newLeafNode(lv_text_1_4, grammarAccess.getCallPartAccess().getTextFullStopKeyword_0_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCallPartRule());
							}
							setWithLastConsumed($current, "text", lv_text_1_4, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getCallPartAccess().getParamCallPartAction_1_0(),
						$current);
				}
			)
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getCallPartAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCallPartAccess().getParamLidlExpressionParserRuleCall_1_2_0());
					}
					lv_param_4_0=ruleLidlExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCallPartRule());
						}
						set(
							$current,
							"param",
							lv_param_4_0,
							"lab.buaa.software.lidl.Lidl.LidlExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getCallPartAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleLidlTerminalExpression
entryRuleLidlTerminalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlTerminalExpressionRule()); }
	iv_ruleLidlTerminalExpression=ruleLidlTerminalExpression
	{ $current=$iv_ruleLidlTerminalExpression.current; }
	EOF;

// Rule LidlTerminalExpression
ruleLidlTerminalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLidlTerminalExpressionAccess().getLidlStringConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_STRING
					{
						newLeafNode(lv_value_1_0, grammarAccess.getLidlTerminalExpressionAccess().getValueSTRINGTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLidlTerminalExpressionAccess().getLidlNumberConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_NUMBER
					{
						newLeafNode(lv_value_3_0, grammarAccess.getLidlTerminalExpressionAccess().getValueNUMBERTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLidlTerminalExpressionRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"lab.buaa.software.lidl.Lidl.NUMBER");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLidlTerminalExpressionAccess().getLidlBoolConstantAction_2_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_5_1='true'
						{
							newLeafNode(lv_value_5_1, grammarAccess.getLidlTerminalExpressionAccess().getValueTrueKeyword_2_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLidlTerminalExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_1, null);
						}
						    |
						lv_value_5_2='false'
						{
							newLeafNode(lv_value_5_2, grammarAccess.getLidlTerminalExpressionAccess().getValueFalseKeyword_2_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLidlTerminalExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_5_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLidlTerminalExpressionAccess().getLidlAvtivationConstantAction_3_0(),
						$current);
				}
			)
			(
				(
					(
						lv_value_7_1='active'
						{
							newLeafNode(lv_value_7_1, grammarAccess.getLidlTerminalExpressionAccess().getValueActiveKeyword_3_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLidlTerminalExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_1, null);
						}
						    |
						lv_value_7_2='inactive'
						{
							newLeafNode(lv_value_7_2, grammarAccess.getLidlTerminalExpressionAccess().getValueInactiveKeyword_3_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getLidlTerminalExpressionRule());
							}
							setWithLastConsumed($current, "value", lv_value_7_2, null);
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getLidlTerminalExpressionAccess().getLidlCompositionAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlTerminalExpressionAccess().getBodyLidlCompositionParserRuleCall_4_1_0());
					}
					lv_body_9_0=ruleLidlComposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlTerminalExpressionRule());
						}
						set(
							$current,
							"body",
							lv_body_9_0,
							"lab.buaa.software.lidl.Lidl.LidlComposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleLidlArray
entryRuleLidlArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlArrayRule()); }
	iv_ruleLidlArray=ruleLidlArray
	{ $current=$iv_ruleLidlArray.current; }
	EOF;

// Rule LidlArray
ruleLidlArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLidlArrayAccess().getLidlExpressionAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getLidlArrayAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlArrayAccess().getItemLidlArrayItemParserRuleCall_2_0_0());
					}
					lv_item_2_0=ruleLidlArrayItem
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlArrayRule());
						}
						add(
							$current,
							"item",
							lv_item_2_0,
							"lab.buaa.software.lidl.Lidl.LidlArrayItem");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getLidlArrayAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLidlArrayAccess().getItemLidlArrayItemParserRuleCall_2_1_1_0());
						}
						lv_item_4_0=ruleLidlArrayItem
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLidlArrayRule());
							}
							add(
								$current,
								"item",
								lv_item_4_0,
								"lab.buaa.software.lidl.Lidl.LidlArrayItem");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)*
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getLidlArrayAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleLidlArrayItem
entryRuleLidlArrayItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlArrayItemRule()); }
	iv_ruleLidlArrayItem=ruleLidlArrayItem
	{ $current=$iv_ruleLidlArrayItem.current; }
	EOF;

// Rule LidlArrayItem
ruleLidlArrayItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getLidlArrayItemAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlArrayItemAccess().getValueLidlExpressionParserRuleCall_1_0());
				}
				lv_value_1_0=ruleLidlExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlArrayItemRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"lab.buaa.software.lidl.Lidl.LidlExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getLidlArrayItemAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleLidlCompositionElement
entryRuleLidlCompositionElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlCompositionElementRule()); }
	iv_ruleLidlCompositionElement=ruleLidlCompositionElement
	{ $current=$iv_ruleLidlCompositionElement.current; }
	EOF;

// Rule LidlCompositionElement
ruleLidlCompositionElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_param_0_0=RULE_ID
				{
					newLeafNode(lv_param_0_0, grammarAccess.getLidlCompositionElementAccess().getParamIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLidlCompositionElementRule());
					}
					setWithLastConsumed(
						$current,
						"param",
						lv_param_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLidlCompositionElementAccess().getColonKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getLidlCompositionElementAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlCompositionElementAccess().getValueLidlExpressionParserRuleCall_3_0());
				}
				lv_value_3_0=ruleLidlExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlCompositionElementRule());
					}
					set(
						$current,
						"value",
						lv_value_3_0,
						"lab.buaa.software.lidl.Lidl.LidlExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getLidlCompositionElementAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleLidlComposition
entryRuleLidlComposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLidlCompositionRule()); }
	iv_ruleLidlComposition=ruleLidlComposition
	{ $current=$iv_ruleLidlComposition.current; }
	EOF;

// Rule LidlComposition
ruleLidlComposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getLidlCompositionAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLidlCompositionAccess().getItemsLidlCompositionElementParserRuleCall_1_0());
				}
				lv_items_1_0=ruleLidlCompositionElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLidlCompositionRule());
					}
					add(
						$current,
						"items",
						lv_items_1_0,
						"lab.buaa.software.lidl.Lidl.LidlCompositionElement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getLidlCompositionAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLidlCompositionAccess().getItemsLidlCompositionElementParserRuleCall_2_1_0());
					}
					lv_items_3_0=ruleLidlCompositionElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLidlCompositionRule());
						}
						add(
							$current,
							"items",
							lv_items_3_0,
							"lab.buaa.software.lidl.Lidl.LidlCompositionElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getLidlCompositionAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Rule DataDirection
ruleDataDirection returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='in'
			{
				$current = grammarAccess.getDataDirectionAccess().getINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataDirectionAccess().getINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='out'
			{
				$current = grammarAccess.getDataDirectionAccess().getOUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataDirectionAccess().getOUTEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_LIDLIDSYMBOL : ('?'|'!'|'+'|'-'|'*'|'/'|'\\'|'='|'@'|'`'|'~'|'%'|'^'|'&'|'_'|'|'|'\''|'"'|'<'|'>')+;

RULE_NUMBER : RULE_INT ('.' RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
